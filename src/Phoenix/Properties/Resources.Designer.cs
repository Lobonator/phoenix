//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Phoenix.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Phoenix.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        internal static System.Drawing.Icon boo {
            get {
                object obj = ResourceManager.GetObject("boo", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static System.Drawing.Icon cs {
            get {
                object obj = ResourceManager.GetObject("cs", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap dots {
            get {
                object obj = ResourceManager.GetObject("dots", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Icon FolderClosed {
            get {
                object obj = ResourceManager.GetObject("FolderClosed", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static System.Drawing.Icon FolderOpened {
            get {
                object obj = ResourceManager.GetObject("FolderOpened", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static System.Drawing.Icon HotkeysIcon {
            get {
                object obj = ResourceManager.GetObject("HotkeysIcon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static System.Drawing.Icon InfoIcon {
            get {
                object obj = ResourceManager.GetObject("InfoIcon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static System.Drawing.Icon JournalIcon {
            get {
                object obj = ResourceManager.GetObject("JournalIcon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static System.Drawing.Icon jsl {
            get {
                object obj = ResourceManager.GetObject("jsl", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
        ///
        ///This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. (http://www.opensource.org/licenses/ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Licence_GPL {
            get {
                return ResourceManager.GetString("Licence_GPL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no license fee or royalty fee to be paid at any time for using the Magic Library. You are however requested to acknowledge the use of the library and provide a link to our home page www.dotnetmagic.com from the About box of your application.
        ///
        ///You may include the source code, modified source code, signed assembly or modified built assembly within your own projects for either personal or commercial use but excluding the restrictions outlined below.
        ///
        ///The following restrictions apply to all parts o [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Licence_MagicLibrary {
            get {
                return ResourceManager.GetString("Licence_MagicLibrary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Redistribution and use in source and binary forms, with or without modification, 
        ///are permitted provided that the following conditions are met:
        ///
        ///   - Redistributions of source code must retain the above copyright notice, 
        ///     this list of conditions and the following disclaimer.
        ///
        ///   - Redistributions in binary form must reproduce the above copyright notice, 
        ///     this list of conditions and the following disclaimer in the documentation 
        ///     and/or other materials provided with the distribution.
        ///        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Licence_XPTable {
            get {
                return ResourceManager.GetString("Licence_XPTable", resourceCulture);
            }
        }
        
        internal static System.Drawing.Icon LogIcon {
            get {
                object obj = ResourceManager.GetObject("LogIcon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap LogoText {
            get {
                object obj = ResourceManager.GetObject("LogoText", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hotkeys.
        /// </summary>
        internal static string Page_Hotkeys {
            get {
                return ResourceManager.GetString("Page_Hotkeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Info.
        /// </summary>
        internal static string Page_Info {
            get {
                return ResourceManager.GetString("Page_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Journal.
        /// </summary>
        internal static string Page_Journal {
            get {
                return ResourceManager.GetString("Page_Journal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log.
        /// </summary>
        internal static string Page_Log {
            get {
                return ResourceManager.GetString("Page_Log", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Runtime.
        /// </summary>
        internal static string Page_Runtime {
            get {
                return ResourceManager.GetString("Page_Runtime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scripts.
        /// </summary>
        internal static string Page_Scripts {
            get {
                return ResourceManager.GetString("Page_Scripts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        internal static string Page_Settings {
            get {
                return ResourceManager.GetString("Page_Settings", resourceCulture);
            }
        }
        
        internal static System.Drawing.Icon phoenix_large {
            get {
                object obj = ResourceManager.GetObject("phoenix_large", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static System.Drawing.Icon PhoenixIcon {
            get {
                object obj = ResourceManager.GetObject("PhoenixIcon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static System.Drawing.Icon resx {
            get {
                object obj = ResourceManager.GetObject("resx", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static System.Drawing.Icon RuntimeIcon {
            get {
                object obj = ResourceManager.GetObject("RuntimeIcon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static System.Drawing.Icon ScriptsIcon {
            get {
                object obj = ResourceManager.GetObject("ScriptsIcon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to General.
        /// </summary>
        internal static string Settings_General {
            get {
                return ResourceManager.GetString("Settings_General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log.
        /// </summary>
        internal static string Settings_Log {
            get {
                return ResourceManager.GetString("Settings_Log", resourceCulture);
            }
        }
        
        internal static System.Drawing.Icon SettingsIcon {
            get {
                object obj = ResourceManager.GetObject("SettingsIcon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static System.Drawing.Icon unknown {
            get {
                object obj = ResourceManager.GetObject("unknown", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static System.Drawing.Icon vb {
            get {
                object obj = ResourceManager.GetObject("vb", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
    }
}
